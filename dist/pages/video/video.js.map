{"version":3,"sources":["webpack:///./src/pages/video/video.tsx","webpack:///./src/pages/video/video.less","webpack:///./src/pages/video/video.tsx?1383"],"names":["VideoPage","connect","video","dispatch","Taro","phoneNumber","success","res","console","skipLogin","fail","err","title","info","tip","type","payload","appId","code","iv","encryptedData","id","shareCode","openId","r","optionsSync","videoDetail","path","item","handleGetUserInfo","Component"],"mappings":"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","file":"pages/video/video.js","sourcesContent":["import React, { Component } from 'react'\nimport Taro from \"@tarojs/taro\"\nimport { connect } from 'react-redux'\nimport { View, Video, Text, Image, Button } from '@tarojs/components'\nimport { AtIcon, AtTag } from 'taro-ui'\nimport Empty from '@/components/Empty'\nimport NavBar from '@/components/NavBar'\nimport tip from '@/utils/tip'\nimport './video.less'\n\n\n\ninterface VideoProps {\n    video,\n    dispatch\n}\n\ninterface VideoState {\n    skipLogin: boolean\n}\n/**视频课程 */\n@connect(({ video, dispatch }) => ({\n    video,\n    dispatch\n}))\nexport default class VideoPage extends Component<VideoProps, VideoState> {\n    id: string;\n    shareCode: string;\n    constructor(props) {\n        super(props)\n        this.state = {\n            skipLogin: true,//是否静默登录\n        }\n    }\n    componentDidMount() {\n        const optionsSync = Taro.getCurrentInstance().router!.params;\n        console.log(optionsSync, '=========进入小程序');\n        const { id, shareCode } = optionsSync;\n        if (!id) {\n            tip.showTips('请使用分享链接进入哦', 'none', 3000)\n        }\n        this.id = id;\n        this.shareCode = shareCode;\n    }\n    componentWillUnmount() {\n        this.props.dispatch({ type: 'video/clear' })\n    }\n    componentDidShow() {\n        if (this.id) {\n            this.queryActType()\n        }\n    }\n\n    onCall = (phoneNumber) => {\n        Taro.makePhoneCall({\n            phoneNumber: phoneNumber //仅为示例，并非真实的电话号码\n        })\n    }\n\n    onShareAppMessage(res) {\n        let { videoDetail } = this.props.video;\n        if (res.from === 'button') {\n            // 来自页面内转发按钮\n            console.log(res.target)\n        }\n        return {\n            title: `${videoDetail?.shopName}-${videoDetail?.name}`,\n            path: `/pages/video/video?id=${videoDetail?.id}&shareCode=${this.shareCode}`\n        }\n    }\n    queryActType = () => {\n        const { dispatch } = this.props;\n        Taro.login({\n            success: (res) => {\n                if (res.code) {\n                    console.log('wx login ', res);\n                    Taro.getUserInfo({\n                        success: (userInfo) => {\n                            console.log(userInfo)\n                            this.setState({ skipLogin: true })\n                            this.miniDecode(res.code, userInfo);\n                        },\n                        fail: (err) => {\n                            this.setState({ skipLogin: false })\n                            console.log('微信登录失败', err);\n                        }\n                    })\n                } else {\n                    console.log('登录失败！' + res.errMsg)\n                }\n            },\n            fail: (err) => {\n                console.log('登录失败！' + err.errMsg)\n            }\n        })\n    }\n    // 微信授权 获取用户信息\n    handleGetUserInfo = (info) => {\n        Taro.showLoading({\n            title: '登录中...'\n        })\n        Taro.login({\n            success: (res) => {\n                Taro.hideLoading()\n                if (res.code) {\n                    console.log('wx login ', res, info);\n                    this.miniDecode(res.code, info.detail)\n                } else {\n                    console.log('登录失败！' + res.errMsg)\n                    tip.showTips('获取用户信息失败,请稍后重试')\n                }\n            },\n            fail: (err) => {\n                Taro.hideLoading()\n                tip.showTips(err.errMsg)\n            }\n        })\n    }\n\n    miniDecode = (code, info) => {\n        this.props.dispatch({\n            type: 'video/miniDecode', payload: { appId: APPID, code: code, iv: info.iv, encryptedData: info.encryptedData }\n        }).then((r) => {\n            this.setState({ skipLogin: true })\n            this.props.dispatch({\n                type: 'video/queryTranscribe', payload: { id: this.id, shareCode: this.shareCode, openId: r.openId }\n            }).catch(err => {\n                console.log(err)\n                tip.showTips(err.errMsg)\n            })\n        }).catch(err => {\n            tip.showTips(err.errMsg)\n        })\n    }\n    render() {\n        let { videoDetail } = this.props.video;\n        let { skipLogin } = this.state;\n        return (\n            <View className='video'>\n                <NavBar title=\"在线课程\" />\n\n                {videoDetail ? <React.Fragment>\n                    <View className=\"videoWarp\">\n                        {videoDetail?.playbackSliceUrl ? <Video\n                            src={videoDetail?.playbackSliceUrl || null}\n                            controls={true}\n                            autoplay={false}\n                            poster={videoDetail?.coverUrl}\n                            initialTime='0'\n                            id='video'\n                            loop={false}\n                            muted={false}\n                        /> : <Image src={videoDetail?.coverUrl} className=\"videoImg\" mode=\"widthFix\" onClick={() => { tip.showTips('回放地址为空') }} />}\n                    </View>\n                    <View className=\"videoInfo\">\n                        <View className=\"videoName\">\n                            <View className=\"videoTitle\">\n                                <Text className=\"Text\">{videoDetail?.name}</Text>\n                                <AtTag size='small' active>直播</AtTag>\n                            </View>\n                            <Text className=\"VideoSource\">课程来源：{videoDetail?.shopName}</Text>\n                        </View>\n                        <View className=\"videoShare\">\n                            <View className=\"iconBtn\" onClick={() => { videoDetail?.shopTel && this.onCall(videoDetail?.shopTel) }}>\n                                <AtIcon value='phone' size='20' color='#6aabf2'></AtIcon>\n                                <Text className=\"Text\">电话</Text>\n                            </View>\n                            <View className=\"line\"></View>\n                            <View className=\"iconBtn\">\n                                <AtIcon value='external-link' size='20' color='#e37f58'></AtIcon>\n                                <Text className=\"Text\">分享</Text>\n                                {videoDetail && <Button openType=\"share\" className=\"share-btn\" />}\n                            </View>\n                        </View>\n                    </View>\n                    <View className=\"videoDesc\">\n                        <Text className=\"videoDescName\">课程简介</Text>\n                        <Text className=\"videoDescText\">{videoDetail?.introduction}</Text>\n                        {\n                            (videoDetail?.picUrls || []).map(item => <Image src={item} className=\"videoDescImg\" mode=\"widthFix\" key={item} />)\n                        }\n                        {\n                            (videoDetail?.picUrls || []).length == 0 && <Text className='nodata'>暂无课程简介</Text>\n                        }\n                    </View>\n\n                </React.Fragment> : skipLogin ? <Empty /> : <Empty>\n                    <View className=\"videoLogin\">\n                        <Text className=\"videoLoginText\">点击授权</Text>\n                        <Button className=\"videoLoginBtn\" openType=\"getUserInfo\" onGetUserInfo={this.handleGetUserInfo}>点击授权</Button>\n                    </View>\n                </Empty>}\n            </View>\n        )\n    }\n}\n\n","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/@tarojs/mini-runner/node_modules/babel-loader/lib/index.js!./video.tsx\"\nvar config = {\"enableShareAppMessage\":true,\"navigationBarTitleText\":\"在线课程\"};\n\ncomponent.enableShareAppMessage = true\nvar inst = Page(createPageConfig(component, 'pages/video/video', {}, config || {}))\n\n"],"sourceRoot":""}