{"version":3,"sources":["webpack:///./src/pages/service/service.tsx","webpack:///./src/components/CombineModal/index.tsx","webpack:///./src/components/Hooks/useEffect_ignoreFirst.tsx","webpack:///./src/pages/service/components/CalendarModal/index.tsx","webpack:///./src/pages/service/components/ContractCard/index.less","webpack:///./src/pages/service/components/ContractCard/index.tsx","webpack:///./src/pages/service/service.tsx?1b82"],"names":["tabList","title","params","state","Service","useState","customerName","setCustomerName","time","setTime","current","setCurrent","TableRef","setTableRef","dispatch","props","useDidShow","fetchData","pageNum","pageSize","useEffect","usePullDownRefresh","sortInfos","field","sort","momentArr","moment","console","type","payload","onOk","res","onClose","useEffect_ignoreFirst","showTime","searchFunc","renderSearch","CalendarModal","CombineModal","modals","Component","ModalName","setState","modalParams","show","close","Object","keys","map","modalName","Modal","React","effect","deps","initializedRef","useRef","result","visible","onConfirm","tip","showTips","value","end","onSelectDate","e","onClear","start","Date","now","format","ContractCard","connect","table","id","Taro","navigateTo","url","data","service_list","item","index","goDetail","cleanServiceOrderVO","productName","productAttrValueName","cancelType","cleanOrderId","serviceTime","province","city","district","address"],"mappings":"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","file":"pages/service/service.js","sourcesContent":["import React, { useEffect, FC, useState } from 'react';\nimport Taro, { usePullDownRefresh, useDidShow } from '@tarojs/taro';\nimport { connect } from 'react-redux';\nimport { View, Text, } from '@tarojs/components';\nimport List from '@/components/List';\nimport NavBar from '@/components/NavBar';\nimport { AtTabs, AtInput, AtIcon } from 'taro-ui';\nimport ContractCard from './components/ContractCard';\nimport CombineModal from '@/components/CombineModal';\nimport CalendarModal from './components/CalendarModal';\nimport useEffect_ignoreFirst from '@/components/Hooks/useEffect_ignoreFirst'\nimport moment from 'moment';\nimport './service.less';\n\ninterface ServiceProps {\n  resume;\n  dispatch;\n  show: Function;\n}\n\nconst tabList = [\n  { title: '未完成', params: { state: 0 } },\n  { title: '已完成', params: { state: 1 } },\n  { title: '已取消', params: { state: 2 } },\n];\n\n/**服务单列表 */\nconst Service: FC<ServiceProps> = (props: ServiceProps) => {\n  const [customerName, setCustomerName] = useState('')\n  const [time, setTime] = useState<any>()\n  const [current, setCurrent] = useState(0)\n  const [TableRef, setTableRef] = useState<any>()\n  const { dispatch } = props;\n\n  useDidShow(() => {\n    fetchData({ pageNum: 0, pageSize: 10 });\n  })\n\n  useEffect(() => {\n    fetchData({ pageNum: 0, pageSize: 10 });\n  }, [time, current])\n\n  usePullDownRefresh(() => {\n    setCustomerName('')\n    TableRef.PullDownRefresh()\n  })\n\n  function fetchData(p) {\n    let params = {\n      ...p,\n      customerName: customerName,\n      state: current,\n      sortInfos: [\n        {\n          field: 'addTime',\n          sort: 'desc',\n        },\n      ],\n    };\n\n    if (time) {\n      let momentArr = [moment(time[0]), moment(time[1])]\n      console.log(time)\n      params.maxServiceTime = moment.max(momentArr).endOf('day').format('x')\n      params.minServiceTime = moment.min(momentArr).startOf('day').format('x')\n    }\n    return dispatch({ type: 'table/getServiceList', payload: params });\n  };\n\n  function handleChange(value) {\n    setCustomerName(value)\n  }\n\n  function searchFunc() {\n    fetchData({ pageNum: 0, pageSize: 10 });\n  }\n\n  function showTime() {\n    props.show(\"CalendarModal\")({\n      onOk: (res, onClose) => {\n        if (res) {\n          setTime([res.value.start, res.value.end])\n        } else {\n          setTime(null)\n        }\n        onClose()\n      }\n    })\n  }\n  useEffect_ignoreFirst(() => {\n    fetchData({ pageNum: 0, pageSize: 10 });\n  }, [time, current])\n\n\n  function renderSearch() {\n    return <View className=\"searchView\">\n      <Text className=\"time\" onClick={showTime}>\n        {\n          time ? (time || []).map(item => moment(item).format('MM/DD')).join('-') : '选择时间段'\n        }\n      </Text>\n      <View className=\"input\">\n        <AtIcon value='search' size='16' color='#999' onClick={searchFunc}></AtIcon>\n        <AtInput\n          className=\"searchInput\"\n          name='name'\n          type='text'\n          placeholder='请输⼊客户姓名搜索'\n          value={customerName}\n          onChange={handleChange}\n          onConfirm={searchFunc}\n          clear\n        />\n      </View>\n    </View>\n\n  }\n\n  return (\n    <View className=\"service ListPage\">\n      <NavBar title=\"服务单\" />\n      <AtTabs\n        current={current}\n        tabList={tabList}\n        onClick={(value) => setCurrent(value)}\n        className=\"BmTab\"\n      />\n      {renderSearch()}\n      <List\n        name=\"service_list\"\n        onChange={fetchData}\n        onRef={(ref) => setTableRef(ref)}\n      >\n        <ContractCard />\n      </List>\n    </View>\n  );\n};\nexport default connect(({ dispatch }) => ({\n  dispatch,\n}))(CombineModal({ CalendarModal })(Service));","\nimport React from 'react';\nimport { View } from '@tarojs/components';\n/**\n * 把组件与传入的Modal组合\n * modal主动关闭调用close：可以传入回传的数据：close()\n * 打开modal：show(modaName)(params)\n * 当前组件关闭modal：由modal自己控制关闭\n * @param {Object} modals 需要传入Object，因为需要知道每个moda名，返回的数据也是存在对应的modal名下\n */\ninterface ModalComponentProps {\n\n}\n\ninterface ModalComponentState {\n  modalParams: {\n    [name: string]: Object,\n  },\n  [modalName: string]: any;\n}\nconst CombineModal = (modals: any) => (Component: any) =>\n  class ModalComponent extends React.Component<ModalComponentProps, ModalComponentState> {\n    constructor(props) {\n      super(props);\n      this.state = {\n        modalParams: {}\n      };\n    }\n\n    show = (ModalName: string) => (params: any) => {\n      this.setState({\n        [ModalName]: true,\n        modalParams: {\n          ...this.state.modalParams,\n          [ModalName]: params\n        }\n      });\n    };\n\n    close = (ModalName: string) => () => {\n      this.setState({\n        [ModalName]: false\n      });\n    };\n\n    render() {\n      return (\n        <View>\n          <Component\n            show={this.show}\n            close={this.close}\n            {...this.props}\n          />\n          {Object.keys(modals).map(modalName => {\n            const Modal = modals[modalName];\n            return (\n              <Modal\n                key={modalName}\n                {...this.state.modalParams[modalName]}\n                visible={this.state[modalName]}\n                onClose={this.close(modalName)}\n              />\n            );\n          })}\n        </View>\n      );\n    }\n  };\n\n\nexport default CombineModal;\n","import { useEffect, useRef } from 'react';\n\n//忽略useEffect组件初次渲染\nconst useEffect_ignoreFirst = (effect, deps) => {\n    const initializedRef = useRef(false)\n    useEffect(() => {\n        if (initializedRef.current) {\n            let result = effect();\n            if (result) return result;\n        } else {\n            initializedRef.current = true;\n        }\n    }, deps)\n}\nexport default useEffect_ignoreFirst","import React, { FC, useEffect, useState, } from 'react'\nimport { View, Button, Text } from '@tarojs/components'\nimport { AtCalendar, AtModal, AtModalHeader, AtModalContent, AtModalAction, } from 'taro-ui'\nimport tip from '@/utils/tip'\nimport moment from 'moment';\ninterface PropsType {\n    visible: boolean;\n    onClose;\n    onOk: Function;\n    timeProps;\n}\n\ntype DateArg = string | number | Date\ninterface SelectDate {\n    end?: DateArg\n    start: DateArg\n}\n\n/**日历选择 */\nconst CalendarModal: FC<PropsType> = (props: PropsType) => {\n    const { visible, onClose, onOk } = props;\n    const [time, setTime] = useState<SelectDate>();\n\n\n    function onConfirm() {\n        if (!time) {\n            tip.showTips('请选择开始时间')\n            return\n        }\n        if (!time.value.end) {\n            tip.showTips('请选择结束时间')\n            return\n        }\n        onOk && onOk(time, onClose)\n\n    }\n\n    function onSelectDate(e: SelectDate) {\n        setTime(e)\n    }\n\n    function onClear() {\n        setTime({\n            start: moment(Date.now()).format('YYYY/MM/DD'),\n            end: moment(Date.now()).format('YYYY/MM/DD')\n        })\n        onOk && onOk(null, onClose)\n    }\n\n    return (\n        <View className=\"workingExperiences\">\n            <AtModal isOpened={visible} onClose={onClose} className=\"BmModal\">\n                <AtModalHeader>\n                    选择时间段\n                    <View className=\"closeBtn\" onClick={onClear}>\n                        <Text className='clear'>清除时间</Text>\n                    </View>\n                </AtModalHeader>\n                <AtModalContent>\n                    <AtCalendar isMultiSelect currentDate={time} onSelectDate={onSelectDate} className=\"BmCalendar\" />\n                </AtModalContent>\n                <AtModalAction>\n                    <Button onClick={onClose}>取消</Button>\n                    <Button onClick={onConfirm} className=\"confirmBtn\">确定</Button>\n                </AtModalAction>\n            </AtModal>\n        </View>\n    )\n}\nexport default CalendarModal\n","// extracted by mini-css-extract-plugin","import React, { Component } from 'react';\r\nimport Taro from '@tarojs/taro';\r\nimport { connect } from 'react-redux';\r\nimport { View, Text } from '@tarojs/components';\r\nimport Card from '@/components/Card';\r\nimport moment from 'moment';\r\nimport './index.less';\r\n\r\ninterface ContractCardProps {\r\n  table?;\r\n}\r\n\r\n@connect(({ table }) => ({\r\n  table,\r\n}))\r\nclass ContractCard extends Component<ContractCardProps> {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  goDetail = id => {\r\n    Taro.navigateTo({\r\n      url: `/pages/service/detail?id=${id}`,\r\n    });\r\n  };\r\n  render() {\r\n    let { table } = this.props;\r\n    let data = table?.service_list?.data || [];\r\n    return (\r\n      <View className=\"list\">\r\n        {data.map((item, index) => {\r\n          return (\r\n            <View\r\n              onClick={() => {\r\n                this.goDetail(item.id);\r\n              }}\r\n              key={index}\r\n            >\r\n              <Card\r\n                title={`${item?.cleanServiceOrderVO?.productName || ''} ${item\r\n                  ?.cleanServiceOrderVO?.productAttrValueName || ''} ${(item?.cancelType == 2) ? '重派取消' : ''}`}\r\n              >\r\n                <View className=\"listItem\">\r\n                  <Text>客户:</Text>\r\n                  <View className=\"listText\">\r\n                    {item?.cleanServiceOrderVO?.customerName || ''}\r\n                  </View>\r\n                </View>\r\n                <View className=\"listItem\">\r\n                  <Text>服务单号:</Text>\r\n                  <View className=\"listText\">{item?.cleanOrderId || ''}</View>\r\n                </View>\r\n                <View className=\"listItem\">\r\n                  <Text>上门时间:</Text>\r\n                  <View className=\"listText\">\r\n                    {item.serviceTime &&\r\n                      moment(item.serviceTime).format('YYYY.MM.DD HH:mm')}\r\n                  </View>\r\n                </View>\r\n                <View className=\"listItem\">\r\n                  <Text>服务地址:</Text>\r\n                  <View className=\"listText\">\r\n                    {item?.province || ''}\r\n                    {item?.city || ''}\r\n                    {item?.district || ''}\r\n                    {item?.address || ''}\r\n                  </View>\r\n                </View>\r\n              </Card>\r\n            </View>\r\n          );\r\n        })}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContractCard;\r\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/@tarojs/mini-runner/node_modules/babel-loader/lib/index.js!./service.tsx\"\nvar config = {\"enablePullDownRefresh\":true,\"navigationBarTitleText\":\"服务单\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/service/service', {}, config || {}))\n\n"],"sourceRoot":""}