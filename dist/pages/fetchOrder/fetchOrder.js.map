{"version":3,"sources":["webpack:///./src/pages/fetchOrder/fetchOrder.tsx","webpack:///./src/pages/fetchOrder/components/OrderItem/index.less","webpack:///./src/pages/fetchOrder/components/OrderItem/index.tsx","webpack:///./src/pages/fetchOrder/fetchOrder.tsx?30f1","webpack:///./src/pages/fetchOrder/index.scss"],"names":["FetchOrder","connect","order","common","table","optionsSync","Taro","console","scene","s","decodeURIComponent","p","parseQuery","paramId","type","payload","id","res","content","commonUtil","queryObj","params","sortInfos","field","sort","pageNum","pageSize","companyId","shopId","data","total","DefaultShopPic","moment","Component","OrderItem","props","getCompanyId","getShopId","dispatch","navigateTo","url","fetcherInfo_list","map","item","index","goDetail","addTime","format","productList","name","join","address","grabAuntList","auntPhoto","DefaultUserPic","length"],"mappings":"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","file":"pages/fetchOrder/fetchOrder.js","sourcesContent":["import React, { Component } from 'react';\nimport { Image, View, Text } from '@tarojs/components';\nimport { connect } from 'react-redux';\nimport Taro from \"@tarojs/taro\"\nimport List from '@/components/List'\nimport NavBar from '@/components/NavBar'\nimport OrderItem from './components/OrderItem'\nimport { parseQuery } from '@/utils/stringUtil'\nimport commonUtil from '@/utils/common'\nimport moment from 'moment'\nimport { DefaultShopPic } from \"@/common/constant\"\nimport './index.scss';\n\ninterface FetchOrderProps {\n  dispatch,\n  table,\n  common,\n  order\n}\ninterface FetchOrderState {\n  current: number;\n}\n\n@connect(({ order, common, table }) => ({\n  order, common, table\n}))\nexport default class FetchOrder extends Component<FetchOrderProps, FetchOrderState> {\n  child\n  pagination\n  queryObj\n\n  async componentDidShow() {\n    await this.decodeID();\n    this.fetchData(\n      { pageNum: 0, pageSize: 10 },\n      { companyId: commonUtil.getCompanyId(), shopId: commonUtil.getShopId() }\n    )\n    this.props.dispatch({ type: 'common/getShopById' })\n  }\n\n  decodeID = async () => {\n    const optionsSync = Taro.getCurrentInstance().router!.params;//获取页面参数\n    console.log(optionsSync, '=========进入小程序')\n    const { scene } = optionsSync;\n    let paramId: string;\n    if (scene) {\n      //扫小程序码进入\n      const s = decodeURIComponent(scene)\n      const p: any = parseQuery(s);\n      paramId = p.id;\n    } else {\n      paramId = optionsSync.id;\n    }\n    if (paramId) {\n      const res = await this.props.dispatch({ type: 'common/contentMapping', payload: { id: paramId } });\n      const { content } = res || {};\n      const p: any = parseQuery(content);\n      if (p.companyId) commonUtil.setCompanyId(p.companyId);\n      if (p.shopId) commonUtil.setShopId(p.shopId);\n    }\n\n  }\n\n  fetchData = (pagination, queryObj?) => {\n    this.pagination = pagination;\n    this.queryObj = queryObj ? queryObj : this.queryObj;\n    let params = {\n      ...this.pagination,\n      ...this.queryObj,\n      sortInfos: [\n        {\n          field: \"recruitTime\",\n          sort: \"desc\"\n        }\n      ]\n    }\n    return this.props.dispatch({\n      type: 'table/getFetcherInfoList', payload: params,\n    }).catch(err => {\n      console.log(err)\n    })\n  }\n\n  onPullDownRefresh() {\n    this.child.PullDownRefresh()\n  }\n\n  render() {\n    const { common, table } = this.props;\n    const data = table?.fetcherInfo_list?.data || [];\n    const total = table?.fetcherInfo_list?.total || 0;\n\n    return (\n      <View className='order ListPage'>\n        <NavBar title=\"招聘栏\" />\n        <View className=\"content_title\">\n          <View className=\"content_title_left flex\">\n            <View className=\"left_image\">\n              <Image className=\"left_image_style\"\n                mode=\"aspectFit\"\n                src={common.shopInfo?.logoUrl || DefaultShopPic}\n              />\n            </View>\n            <View className=\"left_info\">\n              <View><Text className=\"text_name\">{common.shopInfo?.name || ''}</Text></View>\n              <View className=\"text_order_number\"><Text>该企业有{total}笔订单</Text></View>\n            </View>\n          </View>\n          <View className=\"content_title_right flex special\"><Text>{moment(data[0]?.addTime).format('MM-DD')}更新</Text></View>\n        </View>\n        <List\n          name='fetcherInfo_list'\n          onChange={this.fetchData}\n          onRef={(ref) => {\n            this.child = ref\n          }}\n        >\n          <OrderItem />\n        </List>\n      </View>\n    );\n  }\n}\n\n\n","// extracted by mini-css-extract-plugin","import React, { Component } from 'react';\nimport Taro from \"@tarojs/taro\"\nimport { connect } from 'react-redux'\nimport { View, Text, Image } from '@tarojs/components'\nimport { AtDivider } from 'taro-ui'\nimport Card from '@/components/Card'\nimport moment from 'moment'\nimport commonUtil from '@/utils/common';\nimport { DefaultUserPic } from \"@/common/constant\"\nimport './index.less';\n\ninterface OrderItemProps {\n  table?;\n  dispatch?;\n}\n\n@connect(({ table }) => ({\n  table,\n}))\nclass OrderItem extends Component<OrderItemProps> {\n  constructor(props) {\n    super(props)\n  }\n\n  goDetail = async (id) => {\n    const companyId = commonUtil.getCompanyId();\n    const shopId = commonUtil.getShopId();\n    const res = await this.props.dispatch({\n      type: 'common/contentMappingAdd',\n      payload: {\n        content: `companyId=${companyId}&shopId=${shopId}&clueId=${id}`,\n        type: 1\n      }\n    });\n    Taro.navigateTo({\n      url: `/pages/fetchOrderShareMessage/fetchOrderShareMessage?id=${res.id}`\n    })\n  }\n\n  render() {\n    const { table } = this.props;\n    const data = table?.fetcherInfo_list?.data || [];\n    return (\n      <View className=\"list\" >\n        {\n          data.map((item, index) => {\n            return <View onClick={() => { this.goDetail(item.id) }} key={index}>\n              <Card title={`${item.id}`} >\n                {item.addTime && <View className=\"listItem\">\n                  <Text>发布时间:</Text>\n                  <View className=\"listText\">{moment(item.addTime).format(\"YYYY.MM.DD HH:mm:ss\")}</View>\n                </View>}\n                <View className=\"listItem\">\n                  <Text>客户需求:</Text>\n                  <View className=\"listText\">{item.productList.map(item => item.name).join('、')}</View>\n                </View>\n                {item.address && <View className=\"listItem\">\n                  <Text>服务地址:</Text>\n                  <View className=\"listText\">{item.address}</View>\n                </View>}\n                <AtDivider lineColor='#f3f4f5' className=\"divider\" />\n                <View className=\"listBottom\">\n                  <View className=\"left\">\n                    {\n                      (item?.grabAuntList || []).map((item, index) => (\n                        <Image className=\"avatar_style_radius\"\n                          key={index}\n                          src={item.auntPhoto || DefaultUserPic}\n                          style=\"width:30px;height:30px\"\n                          mode=\"aspectFill\"\n                        />\n                      ))\n                    }\n                  </View>\n                  <View className=\"right\">\n                    {\n                      item.grabAuntList ?\n                        <Text className=\"rightText\">有{(item?.grabAuntList || []).length}人在抢</Text> :\n                        <Text className=\"rightText\">待抢单</Text>\n                    }\n                  </View>\n                </View>\n              </Card>\n            </View>\n          })\n        }\n      </View>\n    );\n  }\n\n}\n\nexport default OrderItem;\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/@tarojs/mini-runner/node_modules/babel-loader/lib/index.js!./fetchOrder.tsx\"\nvar config = {\"enablePullDownRefresh\":true,\"navigationBarTitleText\":\"招聘栏\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/fetchOrder/fetchOrder', {}, config || {}))\n\n","// extracted by mini-css-extract-plugin"],"sourceRoot":""}